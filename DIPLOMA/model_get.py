import torchvision.models as models
import torch.nn as nn


def get_model(model_name, num_classes):
    model = getattr(models, model_name)(weights=None)  # ‚ö° –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ –Ω–∞—Ç—Ä–µ–Ω–æ–≤–∞–Ω—É –º–æ–¥–µ–ª—å

    # üîπ –ó–∞–º—ñ–Ω—é—î–º–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –ø—ñ–¥ –Ω–∞—à—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª–∞—Å—ñ–≤
    if hasattr(model, "classifier"):
        in_features = model.classifier[-1].in_features
        model.classifier[-1] = nn.Linear(in_features, num_classes)
    elif hasattr(model, "fc"):
        in_features = model.fc.in_features
        model.fc = nn.Linear(in_features, num_classes)

    return model